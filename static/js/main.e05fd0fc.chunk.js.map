{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","value","className","s","btns","type","onClick","Statistics","good","neutral","bad","total","percentage","Section","children","title","Notification","message","Container","container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","allFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAyBeA,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,MAAOD,EAEPE,UAAWC,IAAEC,KACbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBE,IALjC,SAOGA,GALIA,SCaAO,MApBf,YAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,EAAMH,EAAKC,EAAQC,MAC/B,qDAAwBE,EAAWJ,EAAKC,EAAQC,GAAhD,cCIOG,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,gCACE,mBAAGb,UAAU,QAAb,SAAsBa,IACrBD,MCIQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGf,UAAU,UAAb,SAAwBe,K,gBCFlB,SAASC,EAAT,GAAkC,IAAbJ,EAAY,EAAZA,SAClC,OAAO,qBAAKZ,UAAWC,IAAEgB,UAAlB,SAA8BL,IC+DxBM,MA1Df,WAEE,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAkBMC,EAAqB,SAACjB,EAAMC,EAASC,GACzC,OAAOF,EAAOC,EAAUC,GAUxB,OACE,eAACQ,EAAD,WACE,cAAC,EAAD,CAASH,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCc,SAAAE,GACtB,OAAQA,GACN,IAAK,OACHsB,GAAQ,SAAAd,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHe,GAAW,SAAAd,GAAO,OAAIA,EAAU,KAChC,MACF,IAAK,MACHe,GAAO,SAAAd,GAAG,OAAIA,EAAM,KACpB,MACF,QACE,aAuBA,cAAC,EAAD,CAASK,MAAM,aAAf,SACGU,EAAmBjB,EAAMC,EAASC,GACjC,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,WAtB4B,SAACJ,EAAMC,EAASC,GACtD,IAAMgB,EAAcD,EAAmBjB,EAAMC,EAASC,GACtD,OAAOiB,KAAKC,MAAOpB,EAAOkB,EAAe,QAuBjC,cAAC,EAAD,CAAcT,QAAQ,4BCrDlCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,gC,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.e05fd0fc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          value={option}\r\n          key={option}\r\n          className={s.btns}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, percentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total(good,neutral,bad)}</li>\r\n        <li>Positive feedback: {percentage(good,neutral,bad)} %</li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  percentage: PropTypes.func.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <div>\r\n      <p className=\"title\">{title}</p>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p className=\"message\">{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Container.module.css';\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import  { useState } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\nimport Container from '../Container/Container';\n\nfunction App () {\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = option => {\n    switch (option) {\n      case 'good':\n        setGood(good => good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral => neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad => bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = (good, neutral, bad) => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = (good, neutral, bad) => {\n    const allFeedback = countTotalFeedback(good, neutral, bad);\n    return Math.round((good / allFeedback) * 100);\n  };\n\n  \n    \n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback(good, neutral, bad) ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              percentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"FeedbackOptions_btns__2kVha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nV97\"};"],"sourceRoot":""}