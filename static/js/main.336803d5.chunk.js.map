{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","value","className","s","btns","type","onClick","Statistics","good","neutral","bad","total","percentage","Section","children","title","Notification","message","Container","container","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","allFeedback","positiveReaction","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4RAyBeA,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,MAAOD,EAEPE,UAAWC,IAAEC,KACbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBE,IALjC,SAOGA,GALIA,SCaAO,MApBf,YAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,cCIOC,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,gCACE,mBAAGb,UAAU,QAAb,SAAsBa,IACrBD,MCIQE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGf,UAAU,UAAb,SAAwBe,K,gBCFlB,SAASC,EAAT,GAAkC,IAAbJ,EAAY,EAAZA,SAClC,OAAO,qBAAKZ,UAAWC,IAAEgB,UAAlB,SAA8BL,I,ICKjCM,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPZ,gBAAkB,SAAAE,GAChB,EAAKsB,UAAS,SAAAC,GAAS,sBACpBvB,EAASuB,EAAUvB,GAAU,O,EAIlCwB,mBAAqB,WACnB,MAA+B,EAAKH,MAEpC,OAFA,EAAQb,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBe,gCAAkC,WAChC,IAAMC,EAAc,EAAKF,qBACnBG,EAAmB,EAAKN,MAAMb,KACpC,OAAOoB,KAAKC,MAAOF,EAAmBD,EAAe,M,4CAGvD,WACE,MAA+BI,KAAKT,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfZ,EAAoBgC,KAApBhC,gBACF0B,EAAqBM,KAAKN,qBAC1BC,EACJK,KAAKL,kCACD5B,EAAUkC,OAAOC,KAAKF,KAAKT,OACjC,OACE,eAACH,EAAD,WACE,cAAC,EAAD,CAASH,MAAM,wBAAf,SACE,cAAC,EAAD,CACElB,QAASA,EACTC,gBAAiBA,MAGrB,cAAC,EAAD,CAASiB,MAAM,aAAf,SACGS,EACC,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,EACPZ,WAAYa,IAGd,cAAC,EAAD,CAAcR,QAAQ,+B,GAjDhBgB,aAwDHb,IC1Dfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,gC,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.336803d5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          value={option}\r\n          key={option}\r\n          className={s.btns}\r\n          type=\"button\"\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, percentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {percentage} %</li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <div>\r\n      <p className=\"title\">{title}</p>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p className=\"message\">{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Container.module.css';\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\nimport Container from '../Container/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const allFeedback = this.countTotalFeedback();\n    const positiveReaction = this.state.good;\n    return Math.round((positiveReaction / allFeedback) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { onLeaveFeedback } = this;\n    const countTotalFeedback = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage =\n      this.countPositiveFeedbackPercentage();\n    const options = Object.keys(this.state);\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              percentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"FeedbackOptions_btns__2kVha\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nV97\"};"],"sourceRoot":""}